// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_base.proto

#include "msg_base.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace game {
PROTOBUF_CONSTEXPR ack_result::ack_result(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.msg_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.ec_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ack_resultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ack_resultDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ack_resultDefaultTypeInternal() {}
  union {
    ack_result _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ack_resultDefaultTypeInternal _ack_result_default_instance_;
PROTOBUF_CONSTEXPR msg_empty::msg_empty(
    ::_pbi::ConstantInitialized) {}
struct msg_emptyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR msg_emptyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~msg_emptyDefaultTypeInternal() {}
  union {
    msg_empty _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 msg_emptyDefaultTypeInternal _msg_empty_default_instance_;
PROTOBUF_CONSTEXPR msg_common_ack::msg_common_ack(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct msg_common_ackDefaultTypeInternal {
  PROTOBUF_CONSTEXPR msg_common_ackDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~msg_common_ackDefaultTypeInternal() {}
  union {
    msg_common_ack _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 msg_common_ackDefaultTypeInternal _msg_common_ack_default_instance_;
}  // namespace game
static ::_pb::Metadata file_level_metadata_msg_5fbase_2eproto[3];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_msg_5fbase_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_msg_5fbase_2eproto = nullptr;

const uint32_t TableStruct_msg_5fbase_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::game::ack_result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::game::ack_result, _impl_.ec_),
  PROTOBUF_FIELD_OFFSET(::game::ack_result, _impl_.msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::game::msg_empty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::game::msg_common_ack, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::game::msg_common_ack, _impl_.result_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::game::ack_result)},
  { 8, -1, -1, sizeof(::game::msg_empty)},
  { 14, -1, -1, sizeof(::game::msg_common_ack)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::game::_ack_result_default_instance_._instance,
  &::game::_msg_empty_default_instance_._instance,
  &::game::_msg_common_ack_default_instance_._instance,
};

const char descriptor_table_protodef_msg_5fbase_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016msg_base.proto\022\004game\"%\n\nack_result\022\n\n\002"
  "ec\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\"\013\n\tmsg_empty\"2\n\016ms"
  "g_common_ack\022 \n\006result\030\001 \001(\0132\020.game.ack_"
  "resultb\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_msg_5fbase_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_msg_5fbase_2eproto = {
    false, false, 134, descriptor_table_protodef_msg_5fbase_2eproto,
    "msg_base.proto",
    &descriptor_table_msg_5fbase_2eproto_once, nullptr, 0, 3,
    schemas, file_default_instances, TableStruct_msg_5fbase_2eproto::offsets,
    file_level_metadata_msg_5fbase_2eproto, file_level_enum_descriptors_msg_5fbase_2eproto,
    file_level_service_descriptors_msg_5fbase_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_msg_5fbase_2eproto_getter() {
  return &descriptor_table_msg_5fbase_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_msg_5fbase_2eproto(&descriptor_table_msg_5fbase_2eproto);
namespace game {

// ===================================================================

class ack_result::_Internal {
 public:
};

ack_result::ack_result(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:game.ack_result)
}
ack_result::ack_result(const ack_result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ack_result* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.msg_){}
    , decltype(_impl_.ec_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.msg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_msg().empty()) {
    _this->_impl_.msg_.Set(from._internal_msg(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.ec_ = from._impl_.ec_;
  // @@protoc_insertion_point(copy_constructor:game.ack_result)
}

inline void ack_result::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.msg_){}
    , decltype(_impl_.ec_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.msg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ack_result::~ack_result() {
  // @@protoc_insertion_point(destructor:game.ack_result)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ack_result::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.msg_.Destroy();
}

void ack_result::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ack_result::Clear() {
// @@protoc_insertion_point(message_clear_start:game.ack_result)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.msg_.ClearToEmpty();
  _impl_.ec_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ack_result::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 ec = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.ec_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "game.ack_result.msg"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ack_result::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:game.ack_result)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ec = 1;
  if (this->_internal_ec() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_ec(), target);
  }

  // string msg = 2;
  if (!this->_internal_msg().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "game.ack_result.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:game.ack_result)
  return target;
}

size_t ack_result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:game.ack_result)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 2;
  if (!this->_internal_msg().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // int32 ec = 1;
  if (this->_internal_ec() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_ec());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ack_result::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ack_result::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ack_result::GetClassData() const { return &_class_data_; }


void ack_result::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ack_result*>(&to_msg);
  auto& from = static_cast<const ack_result&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:game.ack_result)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_msg().empty()) {
    _this->_internal_set_msg(from._internal_msg());
  }
  if (from._internal_ec() != 0) {
    _this->_internal_set_ec(from._internal_ec());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ack_result::CopyFrom(const ack_result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:game.ack_result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ack_result::IsInitialized() const {
  return true;
}

void ack_result::InternalSwap(ack_result* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.msg_, lhs_arena,
      &other->_impl_.msg_, rhs_arena
  );
  swap(_impl_.ec_, other->_impl_.ec_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ack_result::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fbase_2eproto_getter, &descriptor_table_msg_5fbase_2eproto_once,
      file_level_metadata_msg_5fbase_2eproto[0]);
}

// ===================================================================

class msg_empty::_Internal {
 public:
};

msg_empty::msg_empty(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:game.msg_empty)
}
msg_empty::msg_empty(const msg_empty& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  msg_empty* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:game.msg_empty)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData msg_empty::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*msg_empty::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata msg_empty::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fbase_2eproto_getter, &descriptor_table_msg_5fbase_2eproto_once,
      file_level_metadata_msg_5fbase_2eproto[1]);
}

// ===================================================================

class msg_common_ack::_Internal {
 public:
  static const ::game::ack_result& result(const msg_common_ack* msg);
};

const ::game::ack_result&
msg_common_ack::_Internal::result(const msg_common_ack* msg) {
  return *msg->_impl_.result_;
}
msg_common_ack::msg_common_ack(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:game.msg_common_ack)
}
msg_common_ack::msg_common_ack(const msg_common_ack& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  msg_common_ack* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_result()) {
    _this->_impl_.result_ = new ::game::ack_result(*from._impl_.result_);
  }
  // @@protoc_insertion_point(copy_constructor:game.msg_common_ack)
}

inline void msg_common_ack::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

msg_common_ack::~msg_common_ack() {
  // @@protoc_insertion_point(destructor:game.msg_common_ack)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void msg_common_ack::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.result_;
}

void msg_common_ack::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void msg_common_ack::Clear() {
// @@protoc_insertion_point(message_clear_start:game.msg_common_ack)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.result_ != nullptr) {
    delete _impl_.result_;
  }
  _impl_.result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* msg_common_ack::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .game.ack_result result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* msg_common_ack::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:game.msg_common_ack)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .game.ack_result result = 1;
  if (this->_internal_has_result()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::result(this),
        _Internal::result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:game.msg_common_ack)
  return target;
}

size_t msg_common_ack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:game.msg_common_ack)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .game.ack_result result = 1;
  if (this->_internal_has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData msg_common_ack::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    msg_common_ack::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*msg_common_ack::GetClassData() const { return &_class_data_; }


void msg_common_ack::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<msg_common_ack*>(&to_msg);
  auto& from = static_cast<const msg_common_ack&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:game.msg_common_ack)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _this->_internal_mutable_result()->::game::ack_result::MergeFrom(
        from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void msg_common_ack::CopyFrom(const msg_common_ack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:game.msg_common_ack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool msg_common_ack::IsInitialized() const {
  return true;
}

void msg_common_ack::InternalSwap(msg_common_ack* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata msg_common_ack::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_5fbase_2eproto_getter, &descriptor_table_msg_5fbase_2eproto_once,
      file_level_metadata_msg_5fbase_2eproto[2]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace game
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::game::ack_result*
Arena::CreateMaybeMessage< ::game::ack_result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::game::ack_result >(arena);
}
template<> PROTOBUF_NOINLINE ::game::msg_empty*
Arena::CreateMaybeMessage< ::game::msg_empty >(Arena* arena) {
  return Arena::CreateMessageInternal< ::game::msg_empty >(arena);
}
template<> PROTOBUF_NOINLINE ::game::msg_common_ack*
Arena::CreateMaybeMessage< ::game::msg_common_ack >(Arena* arena) {
  return Arena::CreateMessageInternal< ::game::msg_common_ack >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
